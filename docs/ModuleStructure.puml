@startuml

'核心类
package SECore <<单例>>{

    '
    abstract class ASECore {

    - node:string
    - {static}instance:SECoreAbstract
    + getNode():string
    + {static}{abstract}get():SECoreAbstract
    '防止单例克隆
    - __clone()
    }

    class SECore extends ASECore {

    + {static}get():SECoreAbstract
    }
}
'*************************************************************************
'监测类
package SEMonitor {

    interface ISECluster {
        + getCluster():string

    }

    abstract class ASEMonitor {
        - recentTime:int
        '集群相关
        - clusterName:string
        - status:string
        - nodeNum:int
        '节点相关
        - nodeList:array
        + getCluster():string
        + getStatus():string
        + getNodeNum():int
        + getNodeList():array
        + recentTime():int
        + {abstract}refresh():void
    }

    class SEMonitor extends ASEMonitor {
    + refresh():void
    }
}
'*************************************************************************
'请求类
package SEQuery {

    interface SEDataWriter {

        + add():int
        + mod():void
        + del():void

    }

    interface SEDataReader {

        + search($key):array
        + read($index):SEData
    }

    abstract class ASEQuery implements SEDataWriter, SEDataReader {
    '普通查询 多关键词
    + {abstract}search(string ...$key):array
    }

    class SEQuery extends ASEQuery {
    + search(...$key):array
    }
}
'数据对象
package SEData {

    interface SEData {

    }

    class SEDataEssay implements SEData {

        - $index:int
        - $title:string
        - $main:string

        + getter()...
        + setter()...

    }
}
'*************************************************************************
'管理
package SE {

    class SE {
    + static SEMonitor monitor()
    + static SEQuery query()
    }
}
'*************************************************************************

'依赖关系
SEMonitor ... SECore
SEQuery ... SECore
SEQuery ... SEData

'包含关系

SE o--> SEMonitor
SE o--> SEQuery

@enduml